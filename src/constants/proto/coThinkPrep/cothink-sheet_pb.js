// source: cothink-sheet.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var common_common_pb = require('./common/common_pb.js');
goog.object.extend(proto, common_common_pb);
goog.exportSymbol('proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest', null, global);
goog.exportSymbol('proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest', null, global);
goog.exportSymbol('proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest', null, global);
goog.exportSymbol('proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest', null, global);
goog.exportSymbol('proto.ai.nworx.api.proto.cothinksheet.SituaionContext', null, global);
goog.exportSymbol('proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest', null, global);
goog.exportSymbol('proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.displayName = 'proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest.displayName = 'proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest.repeatedFields_, null);
};
goog.inherits(proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest.displayName = 'proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.cothinksheet.SituaionContext = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai.nworx.api.proto.cothinksheet.SituaionContext.repeatedFields_, null);
};
goog.inherits(proto.ai.nworx.api.proto.cothinksheet.SituaionContext, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.cothinksheet.SituaionContext.displayName = 'proto.ai.nworx.api.proto.cothinksheet.SituaionContext';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest.displayName = 'proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.displayName = 'proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.displayName = 'proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    programid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    goalid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    milestoneid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    worksheetid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    methodid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    methodtype: jspb.Message.getFieldWithDefault(msg, 7, ""),
    type: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest}
 */
proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest;
  return proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest}
 */
proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProgramid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGoalid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMilestoneid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorksheetid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethodid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethodtype(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProgramid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGoalid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMilestoneid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getWorksheetid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMethodid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getMethodtype();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string userId = 1;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string programId = 2;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.prototype.getProgramid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.prototype.setProgramid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string goalId = 3;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.prototype.getGoalid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.prototype.setGoalid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string milestoneId = 4;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.prototype.getMilestoneid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.prototype.setMilestoneid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string worksheetId = 5;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.prototype.getWorksheetid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.prototype.setWorksheetid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string methodId = 6;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.prototype.getMethodid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.prototype.setMethodid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string methodType = 7;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.prototype.getMethodtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.prototype.setMethodtype = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string type = 8;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userworksheetid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    programid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest;
  return proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserworksheetid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProgramid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserworksheetid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProgramid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string userWorksheetId = 1;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest.prototype.getUserworksheetid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest.prototype.setUserworksheetid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string userId = 2;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string programId = 3;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest.prototype.getProgramid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest.prototype.setProgramid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string type = 4;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userworksheetid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    programid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, ""),
    situaioncontextList: jspb.Message.toObjectList(msg.getSituaioncontextList(),
    proto.ai.nworx.api.proto.cothinksheet.SituaionContext.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest;
  return proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserworksheetid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProgramid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 5:
      var value = new proto.ai.nworx.api.proto.cothinksheet.SituaionContext;
      reader.readMessage(value,proto.ai.nworx.api.proto.cothinksheet.SituaionContext.deserializeBinaryFromReader);
      msg.addSituaioncontext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserworksheetid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProgramid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSituaioncontextList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.ai.nworx.api.proto.cothinksheet.SituaionContext.serializeBinaryToWriter
    );
  }
};


/**
 * optional string userWorksheetId = 1;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest.prototype.getUserworksheetid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest.prototype.setUserworksheetid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string userId = 2;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string programId = 3;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest.prototype.getProgramid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest.prototype.setProgramid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string type = 4;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated SituaionContext situaionContext = 5;
 * @return {!Array<!proto.ai.nworx.api.proto.cothinksheet.SituaionContext>}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest.prototype.getSituaioncontextList = function() {
  return /** @type{!Array<!proto.ai.nworx.api.proto.cothinksheet.SituaionContext>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ai.nworx.api.proto.cothinksheet.SituaionContext, 5));
};


/**
 * @param {!Array<!proto.ai.nworx.api.proto.cothinksheet.SituaionContext>} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest} returns this
*/
proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest.prototype.setSituaioncontextList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.ai.nworx.api.proto.cothinksheet.SituaionContext=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ai.nworx.api.proto.cothinksheet.SituaionContext}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest.prototype.addSituaioncontext = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.ai.nworx.api.proto.cothinksheet.SituaionContext, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest.prototype.clearSituaioncontextList = function() {
  return this.setSituaioncontextList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai.nworx.api.proto.cothinksheet.SituaionContext.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.cothinksheet.SituaionContext.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.cothinksheet.SituaionContext.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.cothinksheet.SituaionContext} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.cothinksheet.SituaionContext.toObject = function(includeInstance, msg) {
  var f, obj = {
    question: jspb.Message.getFieldWithDefault(msg, 1, ""),
    answer: jspb.Message.getFieldWithDefault(msg, 2, ""),
    selectedtagsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.cothinksheet.SituaionContext}
 */
proto.ai.nworx.api.proto.cothinksheet.SituaionContext.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.cothinksheet.SituaionContext;
  return proto.ai.nworx.api.proto.cothinksheet.SituaionContext.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.cothinksheet.SituaionContext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.cothinksheet.SituaionContext}
 */
proto.ai.nworx.api.proto.cothinksheet.SituaionContext.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnswer(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addSelectedtags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.cothinksheet.SituaionContext.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.cothinksheet.SituaionContext.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.cothinksheet.SituaionContext} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.cothinksheet.SituaionContext.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAnswer();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSelectedtagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string question = 1;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.SituaionContext.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.SituaionContext} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.SituaionContext.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string answer = 2;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.SituaionContext.prototype.getAnswer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.SituaionContext} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.SituaionContext.prototype.setAnswer = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string selectedTags = 3;
 * @return {!Array<string>}
 */
proto.ai.nworx.api.proto.cothinksheet.SituaionContext.prototype.getSelectedtagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.SituaionContext} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.SituaionContext.prototype.setSelectedtagsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ai.nworx.api.proto.cothinksheet.SituaionContext} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.SituaionContext.prototype.addSelectedtags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai.nworx.api.proto.cothinksheet.SituaionContext} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.SituaionContext.prototype.clearSelectedtagsList = function() {
  return this.setSelectedtagsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userworksheetid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    programid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, ""),
    sectionid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    pillname: jspb.Message.getFieldWithDefault(msg, 6, ""),
    pillchildname: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest;
  return proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserworksheetid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProgramid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSectionid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPillname(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPillchildname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserworksheetid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProgramid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSectionid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPillname();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPillchildname();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string userWorksheetId = 1;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest.prototype.getUserworksheetid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest.prototype.setUserworksheetid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string userId = 2;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string programId = 3;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest.prototype.getProgramid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest.prototype.setProgramid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string type = 4;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string sectionId = 5;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest.prototype.getSectionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest.prototype.setSectionid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string pillName = 6;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest.prototype.getPillname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest.prototype.setPillname = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string pillChildName = 7;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest.prototype.getPillchildname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest.prototype.setPillchildname = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userworksheetid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    programid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, ""),
    sectionid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    pillname: jspb.Message.getFieldWithDefault(msg, 6, ""),
    pillchildname: jspb.Message.getFieldWithDefault(msg, 7, ""),
    question: jspb.Message.getFieldWithDefault(msg, 8, ""),
    questiontype: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest;
  return proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserworksheetid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProgramid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSectionid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPillname(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPillchildname(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestiontype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserworksheetid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProgramid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSectionid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPillname();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPillchildname();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getQuestiontype();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string userWorksheetId = 1;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.prototype.getUserworksheetid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.prototype.setUserworksheetid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string userId = 2;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string programId = 3;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.prototype.getProgramid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.prototype.setProgramid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string type = 4;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string sectionId = 5;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.prototype.getSectionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.prototype.setSectionid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string pillName = 6;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.prototype.getPillname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.prototype.setPillname = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string pillChildName = 7;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.prototype.getPillchildname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.prototype.setPillchildname = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string question = 8;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string questionType = 9;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.prototype.getQuestiontype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest.prototype.setQuestiontype = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userworksheetid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    programid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, ""),
    sectionid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    pillname: jspb.Message.getFieldWithDefault(msg, 6, ""),
    pillchildname: jspb.Message.getFieldWithDefault(msg, 7, ""),
    question: jspb.Message.getFieldWithDefault(msg, 8, ""),
    status: jspb.Message.getFieldWithDefault(msg, 9, ""),
    responseindex: jspb.Message.getFieldWithDefault(msg, 10, 0),
    answer: jspb.Message.getFieldWithDefault(msg, 11, ""),
    questiontype: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest;
  return proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserworksheetid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProgramid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSectionid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPillname(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPillchildname(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResponseindex(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnswer(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestiontype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserworksheetid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProgramid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSectionid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPillname();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPillchildname();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getResponseindex();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getAnswer();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getQuestiontype();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional string userWorksheetId = 1;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.getUserworksheetid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.setUserworksheetid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string userId = 2;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string programId = 3;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.getProgramid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.setProgramid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string type = 4;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string sectionId = 5;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.getSectionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.setSectionid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string pillName = 6;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.getPillname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.setPillname = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string pillChildName = 7;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.getPillchildname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.setPillchildname = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string question = 8;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string status = 9;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 responseIndex = 10;
 * @return {number}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.getResponseindex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.setResponseindex = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string answer = 11;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.getAnswer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.setAnswer = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string questionType = 12;
 * @return {string}
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.getQuestiontype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest} returns this
 */
proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest.prototype.setQuestiontype = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


goog.object.extend(exports, proto.ai.nworx.api.proto.cothinksheet);
