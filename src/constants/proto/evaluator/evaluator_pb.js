// source: evaluator.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var common_common_pb = require('./common/common_pb.js');
goog.object.extend(proto, common_common_pb);
goog.exportSymbol('proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest', null, global);
goog.exportSymbol('proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest', null, global);
goog.exportSymbol('proto.ai.nworx.api.proto.evaluator.FetchTestOfEvaluatorRequest', null, global);
goog.exportSymbol('proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest', null, global);
goog.exportSymbol('proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.evaluator.FetchTestOfEvaluatorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.nworx.api.proto.evaluator.FetchTestOfEvaluatorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.evaluator.FetchTestOfEvaluatorRequest.displayName = 'proto.ai.nworx.api.proto.evaluator.FetchTestOfEvaluatorRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest.displayName = 'proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest.displayName = 'proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest.displayName = 'proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest.displayName = 'proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.evaluator.FetchTestOfEvaluatorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.evaluator.FetchTestOfEvaluatorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.evaluator.FetchTestOfEvaluatorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.evaluator.FetchTestOfEvaluatorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    evaluatoruserid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.evaluator.FetchTestOfEvaluatorRequest}
 */
proto.ai.nworx.api.proto.evaluator.FetchTestOfEvaluatorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.evaluator.FetchTestOfEvaluatorRequest;
  return proto.ai.nworx.api.proto.evaluator.FetchTestOfEvaluatorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.evaluator.FetchTestOfEvaluatorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.evaluator.FetchTestOfEvaluatorRequest}
 */
proto.ai.nworx.api.proto.evaluator.FetchTestOfEvaluatorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvaluatoruserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.evaluator.FetchTestOfEvaluatorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.evaluator.FetchTestOfEvaluatorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.evaluator.FetchTestOfEvaluatorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.evaluator.FetchTestOfEvaluatorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvaluatoruserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string evaluatorUserId = 1;
 * @return {string}
 */
proto.ai.nworx.api.proto.evaluator.FetchTestOfEvaluatorRequest.prototype.getEvaluatoruserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.evaluator.FetchTestOfEvaluatorRequest} returns this
 */
proto.ai.nworx.api.proto.evaluator.FetchTestOfEvaluatorRequest.prototype.setEvaluatoruserid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    evaluatoruserid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    usertestmapid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest}
 */
proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest;
  return proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest}
 */
proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvaluatoruserid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsertestmapid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvaluatoruserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsertestmapid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string evaluatorUserId = 1;
 * @return {string}
 */
proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest.prototype.getEvaluatoruserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest} returns this
 */
proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest.prototype.setEvaluatoruserid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string userTestMapId = 2;
 * @return {string}
 */
proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest.prototype.getUsertestmapid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest} returns this
 */
proto.ai.nworx.api.proto.evaluator.StartEvaluationRequest.prototype.setUsertestmapid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    evaluatoruserid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    usertestmapid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest}
 */
proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest;
  return proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest}
 */
proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvaluatoruserid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsertestmapid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvaluatoruserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsertestmapid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string evaluatorUserId = 1;
 * @return {string}
 */
proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest.prototype.getEvaluatoruserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest} returns this
 */
proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest.prototype.setEvaluatoruserid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string userTestMapId = 2;
 * @return {string}
 */
proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest.prototype.getUsertestmapid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest} returns this
 */
proto.ai.nworx.api.proto.evaluator.FinishEvaluationRequest.prototype.setUsertestmapid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    evaluatoruserid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    usertestmapid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest}
 */
proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest;
  return proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest}
 */
proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvaluatoruserid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsertestmapid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvaluatoruserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsertestmapid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string evaluatorUserId = 1;
 * @return {string}
 */
proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest.prototype.getEvaluatoruserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest} returns this
 */
proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest.prototype.setEvaluatoruserid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string userTestMapId = 2;
 * @return {string}
 */
proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest.prototype.getUsertestmapid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest} returns this
 */
proto.ai.nworx.api.proto.evaluator.FetchAnswersForEvaluationRequest.prototype.setUsertestmapid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    evaluatoruserid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    usertestmapid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    answerid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    evaluationtype: jspb.Message.getFieldWithDefault(msg, 4, ""),
    marksscored: jspb.Message.getFieldWithDefault(msg, 5, 0),
    correct: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    note: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest}
 */
proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest;
  return proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest}
 */
proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvaluatoruserid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsertestmapid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnswerid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvaluationtype(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMarksscored(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCorrect(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvaluatoruserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsertestmapid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAnswerid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEvaluationtype();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMarksscored();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getCorrect();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getNote();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string evaluatorUserId = 1;
 * @return {string}
 */
proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest.prototype.getEvaluatoruserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest} returns this
 */
proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest.prototype.setEvaluatoruserid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string userTestMapId = 2;
 * @return {string}
 */
proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest.prototype.getUsertestmapid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest} returns this
 */
proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest.prototype.setUsertestmapid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string answerId = 3;
 * @return {string}
 */
proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest.prototype.getAnswerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest} returns this
 */
proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest.prototype.setAnswerid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string evaluationType = 4;
 * @return {string}
 */
proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest.prototype.getEvaluationtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest} returns this
 */
proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest.prototype.setEvaluationtype = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 marksScored = 5;
 * @return {number}
 */
proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest.prototype.getMarksscored = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest} returns this
 */
proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest.prototype.setMarksscored = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool correct = 6;
 * @return {boolean}
 */
proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest.prototype.getCorrect = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest} returns this
 */
proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest.prototype.setCorrect = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string note = 7;
 * @return {string}
 */
proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest} returns this
 */
proto.ai.nworx.api.proto.evaluator.EvaluateAnswerRequest.prototype.setNote = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


goog.object.extend(exports, proto.ai.nworx.api.proto.evaluator);
