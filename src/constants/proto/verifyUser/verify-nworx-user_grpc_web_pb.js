/**
 * @fileoverview gRPC-Web generated client stub for ai.nworx.api.proto.nworxuser
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v4.22.2
// source: verify-nworx-user.proto

/* eslint-disable */
// @ts-nocheck

const grpc = {};
grpc.web = require("grpc-web");

const proto = {};
proto.ai = {};
proto.ai.nworx = {};
proto.ai.nworx.api = {};
proto.ai.nworx.api.proto = {};
proto.ai.nworx.api.proto.nworxuser = require("./verify-nworx-user_pb.js");

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.ai.nworx.api.proto.nworxuser.VerifyNworxUserServiceClient = function (
  hostname,
  credentials,
  options
) {
  if (!options) options = {};
  options.format = "text";

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, "");
};

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.ai.nworx.api.proto.nworxuser.VerifyNworxUserServicePromiseClient =
  function (hostname, credentials, options) {
    if (!options) options = {};
    options.format = "text";

    /**
     * @private @const {!grpc.web.GrpcWebClientBase} The client
     */
    this.client_ = new grpc.web.GrpcWebClientBase(options);

    /**
     * @private @const {string} The hostname
     */
    this.hostname_ = hostname.replace(/\/+$/, "");
  };

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai.nworx.api.proto.nworxuser.VerifyNworxUserRequest,
 *   !proto.ai.nworx.api.proto.nworxuser.VerifyNworxUserResponse>}
 */
const methodDescriptor_VerifyNworxUserService_verifyNworxUser =
  new grpc.web.MethodDescriptor(
    "/ai.nworx.api.proto.nworxuser.VerifyNworxUserService/verifyNworxUser",
    grpc.web.MethodType.UNARY,
    proto.ai.nworx.api.proto.nworxuser.VerifyNworxUserRequest,
    proto.ai.nworx.api.proto.nworxuser.VerifyNworxUserResponse,
    /**
     * @param {!proto.ai.nworx.api.proto.nworxuser.VerifyNworxUserRequest} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.ai.nworx.api.proto.nworxuser.VerifyNworxUserResponse.deserializeBinary
  );

/**
 * @param {!proto.ai.nworx.api.proto.nworxuser.VerifyNworxUserRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai.nworx.api.proto.nworxuser.VerifyNworxUserResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai.nworx.api.proto.nworxuser.VerifyNworxUserResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai.nworx.api.proto.nworxuser.VerifyNworxUserServiceClient.prototype.verifyNworxUser =
  function (request, metadata, callback) {
    return this.client_.rpcCall(
      this.hostname_ +
        "/ai.nworx.api.proto.nworxuser.VerifyNworxUserService/verifyNworxUser",
      request,
      metadata || {},
      methodDescriptor_VerifyNworxUserService_verifyNworxUser,
      callback
    );
  };

/**
 * @param {!proto.ai.nworx.api.proto.nworxuser.VerifyNworxUserRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai.nworx.api.proto.nworxuser.VerifyNworxUserResponse>}
 *     Promise that resolves to the response
 */
proto.ai.nworx.api.proto.nworxuser.VerifyNworxUserServicePromiseClient.prototype.verifyNworxUser =
  function (request, metadata) {
    return this.client_.unaryCall(
      this.hostname_ +
        "/ai.nworx.api.proto.nworxuser.VerifyNworxUserService/verifyNworxUser",
      request,
      metadata || {},
      methodDescriptor_VerifyNworxUserService_verifyNworxUser
    );
  };

module.exports = proto.ai.nworx.api.proto.nworxuser;
