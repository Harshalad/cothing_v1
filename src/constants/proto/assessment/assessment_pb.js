// source: assessment.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_common_pb = require('./common/common_pb.js');
goog.object.extend(proto, common_common_pb);
goog.exportSymbol('proto.ai.nworx.api.proto.assessment.CreateUserTestRequest', null, global);
goog.exportSymbol('proto.ai.nworx.api.proto.assessment.File', null, global);
goog.exportSymbol('proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest', null, global);
goog.exportSymbol('proto.ai.nworx.api.proto.assessment.SubmitTestRequest', null, global);
goog.exportSymbol('proto.ai.nworx.api.proto.assessment.TestDetailsRequest', null, global);
goog.exportSymbol('proto.ai.nworx.api.proto.assessment.TestEventDetail', null, global);
goog.exportSymbol('proto.ai.nworx.api.proto.assessment.TestGoalDetail', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.assessment.TestDetailsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.nworx.api.proto.assessment.TestDetailsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.assessment.TestDetailsRequest.displayName = 'proto.ai.nworx.api.proto.assessment.TestDetailsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.nworx.api.proto.assessment.CreateUserTestRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.displayName = 'proto.ai.nworx.api.proto.assessment.CreateUserTestRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.assessment.TestGoalDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.nworx.api.proto.assessment.TestGoalDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.assessment.TestGoalDetail.displayName = 'proto.ai.nworx.api.proto.assessment.TestGoalDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.assessment.TestEventDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.nworx.api.proto.assessment.TestEventDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.assessment.TestEventDetail.displayName = 'proto.ai.nworx.api.proto.assessment.TestEventDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.repeatedFields_, null);
};
goog.inherits(proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.displayName = 'proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.assessment.File = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.nworx.api.proto.assessment.File, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.assessment.File.displayName = 'proto.ai.nworx.api.proto.assessment.File';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.assessment.SubmitTestRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.nworx.api.proto.assessment.SubmitTestRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.assessment.SubmitTestRequest.displayName = 'proto.ai.nworx.api.proto.assessment.SubmitTestRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.assessment.TestDetailsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.assessment.TestDetailsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.assessment.TestDetailsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.assessment.TestDetailsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    usertestmapid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.assessment.TestDetailsRequest}
 */
proto.ai.nworx.api.proto.assessment.TestDetailsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.assessment.TestDetailsRequest;
  return proto.ai.nworx.api.proto.assessment.TestDetailsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.assessment.TestDetailsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.assessment.TestDetailsRequest}
 */
proto.ai.nworx.api.proto.assessment.TestDetailsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsertestmapid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.assessment.TestDetailsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.assessment.TestDetailsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.assessment.TestDetailsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.assessment.TestDetailsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsertestmapid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string userTestMapId = 1;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.TestDetailsRequest.prototype.getUsertestmapid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.assessment.TestDetailsRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.TestDetailsRequest.prototype.setUsertestmapid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.assessment.CreateUserTestRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    testid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    batteryid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    parenttestid: jspb.Message.getFieldWithDefault(msg, 10, ""),
    batterygroupid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    type: jspb.Message.getFieldWithDefault(msg, 8, ""),
    role: jspb.Message.getFieldWithDefault(msg, 9, ""),
    startdate: jspb.Message.getFieldWithDefault(msg, 3, 0),
    enddate: jspb.Message.getFieldWithDefault(msg, 4, 0),
    noofattempts: jspb.Message.getFieldWithDefault(msg, 5, 0),
    batterystartdate: jspb.Message.getFieldWithDefault(msg, 11, 0),
    batteryenddate: jspb.Message.getFieldWithDefault(msg, 12, 0),
    goaldetails: (f = msg.getGoaldetails()) && proto.ai.nworx.api.proto.assessment.TestGoalDetail.toObject(includeInstance, f),
    eventdetails: (f = msg.getEventdetails()) && proto.ai.nworx.api.proto.assessment.TestEventDetail.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.assessment.CreateUserTestRequest}
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.assessment.CreateUserTestRequest;
  return proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.assessment.CreateUserTestRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.assessment.CreateUserTestRequest}
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTestid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBatteryid(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setParenttestid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBatterygroupid(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartdate(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEnddate(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNoofattempts(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBatterystartdate(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBatteryenddate(value);
      break;
    case 13:
      var value = new proto.ai.nworx.api.proto.assessment.TestGoalDetail;
      reader.readMessage(value,proto.ai.nworx.api.proto.assessment.TestGoalDetail.deserializeBinaryFromReader);
      msg.setGoaldetails(value);
      break;
    case 14:
      var value = new proto.ai.nworx.api.proto.assessment.TestEventDetail;
      reader.readMessage(value,proto.ai.nworx.api.proto.assessment.TestEventDetail.deserializeBinaryFromReader);
      msg.setEventdetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.assessment.CreateUserTestRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTestid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBatteryid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getParenttestid();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getBatterygroupid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getRole();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getStartdate();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getEnddate();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getNoofattempts();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getBatterystartdate();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getBatteryenddate();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getGoaldetails();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.ai.nworx.api.proto.assessment.TestGoalDetail.serializeBinaryToWriter
    );
  }
  f = message.getEventdetails();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.ai.nworx.api.proto.assessment.TestEventDetail.serializeBinaryToWriter
    );
  }
};


/**
 * optional string userId = 1;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.assessment.CreateUserTestRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string testId = 2;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.getTestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.assessment.CreateUserTestRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.setTestid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string batteryId = 6;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.getBatteryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.assessment.CreateUserTestRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.setBatteryid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string parentTestId = 10;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.getParenttestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.assessment.CreateUserTestRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.setParenttestid = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string batteryGroupId = 7;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.getBatterygroupid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.assessment.CreateUserTestRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.setBatterygroupid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string type = 8;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.assessment.CreateUserTestRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string role = 9;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.assessment.CreateUserTestRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.setRole = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int64 startDate = 3;
 * @return {number}
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.getStartdate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai.nworx.api.proto.assessment.CreateUserTestRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.setStartdate = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 endDate = 4;
 * @return {number}
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.getEnddate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai.nworx.api.proto.assessment.CreateUserTestRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.setEnddate = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 noOfAttempts = 5;
 * @return {number}
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.getNoofattempts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai.nworx.api.proto.assessment.CreateUserTestRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.setNoofattempts = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 batteryStartDate = 11;
 * @return {number}
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.getBatterystartdate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai.nworx.api.proto.assessment.CreateUserTestRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.setBatterystartdate = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int64 batteryEndDate = 12;
 * @return {number}
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.getBatteryenddate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai.nworx.api.proto.assessment.CreateUserTestRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.setBatteryenddate = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional TestGoalDetail GoalDetails = 13;
 * @return {?proto.ai.nworx.api.proto.assessment.TestGoalDetail}
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.getGoaldetails = function() {
  return /** @type{?proto.ai.nworx.api.proto.assessment.TestGoalDetail} */ (
    jspb.Message.getWrapperField(this, proto.ai.nworx.api.proto.assessment.TestGoalDetail, 13));
};


/**
 * @param {?proto.ai.nworx.api.proto.assessment.TestGoalDetail|undefined} value
 * @return {!proto.ai.nworx.api.proto.assessment.CreateUserTestRequest} returns this
*/
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.setGoaldetails = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai.nworx.api.proto.assessment.CreateUserTestRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.clearGoaldetails = function() {
  return this.setGoaldetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.hasGoaldetails = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional TestEventDetail eventDetails = 14;
 * @return {?proto.ai.nworx.api.proto.assessment.TestEventDetail}
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.getEventdetails = function() {
  return /** @type{?proto.ai.nworx.api.proto.assessment.TestEventDetail} */ (
    jspb.Message.getWrapperField(this, proto.ai.nworx.api.proto.assessment.TestEventDetail, 14));
};


/**
 * @param {?proto.ai.nworx.api.proto.assessment.TestEventDetail|undefined} value
 * @return {!proto.ai.nworx.api.proto.assessment.CreateUserTestRequest} returns this
*/
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.setEventdetails = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai.nworx.api.proto.assessment.CreateUserTestRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.clearEventdetails = function() {
  return this.setEventdetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.nworx.api.proto.assessment.CreateUserTestRequest.prototype.hasEventdetails = function() {
  return jspb.Message.getField(this, 14) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.assessment.TestGoalDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.assessment.TestGoalDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.assessment.TestGoalDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.assessment.TestGoalDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    programid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    usergoalid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    milestoneid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    methodid: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.assessment.TestGoalDetail}
 */
proto.ai.nworx.api.proto.assessment.TestGoalDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.assessment.TestGoalDetail;
  return proto.ai.nworx.api.proto.assessment.TestGoalDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.assessment.TestGoalDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.assessment.TestGoalDetail}
 */
proto.ai.nworx.api.proto.assessment.TestGoalDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProgramid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsergoalid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMilestoneid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethodid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.assessment.TestGoalDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.assessment.TestGoalDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.assessment.TestGoalDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.assessment.TestGoalDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProgramid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUsergoalid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMilestoneid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMethodid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string userId = 1;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.TestGoalDetail.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.assessment.TestGoalDetail} returns this
 */
proto.ai.nworx.api.proto.assessment.TestGoalDetail.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string programId = 2;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.TestGoalDetail.prototype.getProgramid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.assessment.TestGoalDetail} returns this
 */
proto.ai.nworx.api.proto.assessment.TestGoalDetail.prototype.setProgramid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string userGoalId = 3;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.TestGoalDetail.prototype.getUsergoalid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.assessment.TestGoalDetail} returns this
 */
proto.ai.nworx.api.proto.assessment.TestGoalDetail.prototype.setUsergoalid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string milestoneId = 4;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.TestGoalDetail.prototype.getMilestoneid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.assessment.TestGoalDetail} returns this
 */
proto.ai.nworx.api.proto.assessment.TestGoalDetail.prototype.setMilestoneid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string methodId = 5;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.TestGoalDetail.prototype.getMethodid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.assessment.TestGoalDetail} returns this
 */
proto.ai.nworx.api.proto.assessment.TestGoalDetail.prototype.setMethodid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.assessment.TestEventDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.assessment.TestEventDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.assessment.TestEventDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.assessment.TestEventDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    usereventid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    usercontentid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    usermethodid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.assessment.TestEventDetail}
 */
proto.ai.nworx.api.proto.assessment.TestEventDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.assessment.TestEventDetail;
  return proto.ai.nworx.api.proto.assessment.TestEventDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.assessment.TestEventDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.assessment.TestEventDetail}
 */
proto.ai.nworx.api.proto.assessment.TestEventDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsereventid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsercontentid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsermethodid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.assessment.TestEventDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.assessment.TestEventDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.assessment.TestEventDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.assessment.TestEventDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsereventid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsercontentid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUsermethodid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string userEventId = 1;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.TestEventDetail.prototype.getUsereventid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.assessment.TestEventDetail} returns this
 */
proto.ai.nworx.api.proto.assessment.TestEventDetail.prototype.setUsereventid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string userContentId = 2;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.TestEventDetail.prototype.getUsercontentid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.assessment.TestEventDetail} returns this
 */
proto.ai.nworx.api.proto.assessment.TestEventDetail.prototype.setUsercontentid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string userMethodId = 3;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.TestEventDetail.prototype.getUsermethodid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.assessment.TestEventDetail} returns this
 */
proto.ai.nworx.api.proto.assessment.TestEventDetail.prototype.setUsermethodid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    usertestmapid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sectionid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    caseid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    questionid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    answer: jspb.Message.getFieldWithDefault(msg, 5, ""),
    answeroptionList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    questiontype: jspb.Message.getFieldWithDefault(msg, 7, ""),
    filedetails: (f = msg.getFiledetails()) && proto.ai.nworx.api.proto.assessment.File.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest}
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest;
  return proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest}
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsertestmapid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSectionid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaseid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestionid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnswer(value);
      break;
    case 6:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addAnsweroption(values[i]);
      }
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestiontype(value);
      break;
    case 8:
      var value = new proto.ai.nworx.api.proto.assessment.File;
      reader.readMessage(value,proto.ai.nworx.api.proto.assessment.File.deserializeBinaryFromReader);
      msg.setFiledetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsertestmapid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSectionid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCaseid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getQuestionid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAnswer();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAnsweroptionList();
  if (f.length > 0) {
    writer.writePackedInt32(
      6,
      f
    );
  }
  f = message.getQuestiontype();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getFiledetails();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.ai.nworx.api.proto.assessment.File.serializeBinaryToWriter
    );
  }
};


/**
 * optional string userTestMapId = 1;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.prototype.getUsertestmapid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.prototype.setUsertestmapid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sectionId = 2;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.prototype.getSectionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.prototype.setSectionid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string caseId = 3;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.prototype.getCaseid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.prototype.setCaseid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string questionId = 4;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.prototype.getQuestionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.prototype.setQuestionid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string answer = 5;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.prototype.getAnswer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.prototype.setAnswer = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated int32 answerOption = 6;
 * @return {!Array<number>}
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.prototype.getAnsweroptionList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.prototype.setAnsweroptionList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.prototype.addAnsweroption = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.prototype.clearAnsweroptionList = function() {
  return this.setAnsweroptionList([]);
};


/**
 * optional string questionType = 7;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.prototype.getQuestiontype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.prototype.setQuestiontype = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional File fileDetails = 8;
 * @return {?proto.ai.nworx.api.proto.assessment.File}
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.prototype.getFiledetails = function() {
  return /** @type{?proto.ai.nworx.api.proto.assessment.File} */ (
    jspb.Message.getWrapperField(this, proto.ai.nworx.api.proto.assessment.File, 8));
};


/**
 * @param {?proto.ai.nworx.api.proto.assessment.File|undefined} value
 * @return {!proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest} returns this
*/
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.prototype.setFiledetails = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.prototype.clearFiledetails = function() {
  return this.setFiledetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.nworx.api.proto.assessment.SubmitAnswerRequest.prototype.hasFiledetails = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.assessment.File.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.assessment.File.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.assessment.File} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.assessment.File.toObject = function(includeInstance, msg) {
  var f, obj = {
    contenttype: jspb.Message.getFieldWithDefault(msg, 1, ""),
    content: msg.getContent_asB64(),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.assessment.File}
 */
proto.ai.nworx.api.proto.assessment.File.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.assessment.File;
  return proto.ai.nworx.api.proto.assessment.File.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.assessment.File} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.assessment.File}
 */
proto.ai.nworx.api.proto.assessment.File.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContenttype(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContent(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.assessment.File.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.assessment.File.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.assessment.File} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.assessment.File.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContenttype();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContent_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string contentType = 1;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.File.prototype.getContenttype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.assessment.File} returns this
 */
proto.ai.nworx.api.proto.assessment.File.prototype.setContenttype = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes content = 2;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.File.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes content = 2;
 * This is a type-conversion wrapper around `getContent()`
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.File.prototype.getContent_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContent()));
};


/**
 * optional bytes content = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContent()`
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.assessment.File.prototype.getContent_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContent()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ai.nworx.api.proto.assessment.File} returns this
 */
proto.ai.nworx.api.proto.assessment.File.prototype.setContent = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.File.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.assessment.File} returns this
 */
proto.ai.nworx.api.proto.assessment.File.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.assessment.SubmitTestRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.assessment.SubmitTestRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.assessment.SubmitTestRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.assessment.SubmitTestRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    usertestmapid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    autosubmitted: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.assessment.SubmitTestRequest}
 */
proto.ai.nworx.api.proto.assessment.SubmitTestRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.assessment.SubmitTestRequest;
  return proto.ai.nworx.api.proto.assessment.SubmitTestRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.assessment.SubmitTestRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.assessment.SubmitTestRequest}
 */
proto.ai.nworx.api.proto.assessment.SubmitTestRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsertestmapid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutosubmitted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.assessment.SubmitTestRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.assessment.SubmitTestRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.assessment.SubmitTestRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.assessment.SubmitTestRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsertestmapid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAutosubmitted();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string userTestMapId = 1;
 * @return {string}
 */
proto.ai.nworx.api.proto.assessment.SubmitTestRequest.prototype.getUsertestmapid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.assessment.SubmitTestRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.SubmitTestRequest.prototype.setUsertestmapid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool autoSubmitted = 2;
 * @return {boolean}
 */
proto.ai.nworx.api.proto.assessment.SubmitTestRequest.prototype.getAutosubmitted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai.nworx.api.proto.assessment.SubmitTestRequest} returns this
 */
proto.ai.nworx.api.proto.assessment.SubmitTestRequest.prototype.setAutosubmitted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


goog.object.extend(exports, proto.ai.nworx.api.proto.assessment);
