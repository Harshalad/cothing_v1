// source: update-user-goal.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var common_common_pb = require('./common/common_pb.js');
goog.object.extend(proto, common_common_pb);
goog.exportSymbol('proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion', null, global);
goog.exportSymbol('proto.ai.nworx.api.proto.userprogram.usergoal.Tag', null, global);
goog.exportSymbol('proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest', null, global);
goog.exportSymbol('proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest', null, global);
goog.exportSymbol('proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest', null, global);
goog.exportSymbol('proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest', null, global);
goog.exportSymbol('proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest', null, global);
goog.exportSymbol('proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest', null, global);
goog.exportSymbol('proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest', null, global);
goog.exportSymbol('proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.displayName = 'proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest.repeatedFields_, null);
};
goog.inherits(proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest.displayName = 'proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest.displayName = 'proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.repeatedFields_, null);
};
goog.inherits(proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.displayName = 'proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.repeatedFields_, null);
};
goog.inherits(proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.displayName = 'proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest.repeatedFields_, null);
};
goog.inherits(proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest.displayName = 'proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.repeatedFields_, null);
};
goog.inherits(proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.displayName = 'proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.userprogram.usergoal.Tag = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.nworx.api.proto.userprogram.usergoal.Tag, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.userprogram.usergoal.Tag.displayName = 'proto.ai.nworx.api.proto.userprogram.usergoal.Tag';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest.displayName = 'proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest.displayName = 'proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    usergoalid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    programid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest;
  return proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsergoalid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProgramid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsergoalid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProgramid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string userGoalId = 1;
 * @return {string}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.prototype.getUsergoalid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.prototype.setUsergoalid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string userId = 2;
 * @return {string}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string programId = 3;
 * @return {string}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.prototype.getProgramid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.prototype.setProgramid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    goaldetails: (f = msg.getGoaldetails()) && proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, ""),
    approvedby: jspb.Message.getFieldWithDefault(msg, 3, ""),
    questionanswerList: jspb.Message.toObjectList(msg.getQuestionanswerList(),
    proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest;
  return proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest;
      reader.readMessage(value,proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.deserializeBinaryFromReader);
      msg.setGoaldetails(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setApprovedby(value);
      break;
    case 4:
      var value = new proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion;
      reader.readMessage(value,proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.deserializeBinaryFromReader);
      msg.addQuestionanswer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGoaldetails();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getApprovedby();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getQuestionanswerList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * optional UpdateGoalRequest goalDetails = 1;
 * @return {?proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest.prototype.getGoaldetails = function() {
  return /** @type{?proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest} */ (
    jspb.Message.getWrapperField(this, proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest, 1));
};


/**
 * @param {?proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest|undefined} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest} returns this
*/
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest.prototype.setGoaldetails = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest.prototype.clearGoaldetails = function() {
  return this.setGoaldetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest.prototype.hasGoaldetails = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string approvedBy = 3;
 * @return {string}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest.prototype.getApprovedby = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest.prototype.setApprovedby = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated CustomQuestion questionAnswer = 4;
 * @return {!Array<!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion>}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest.prototype.getQuestionanswerList = function() {
  return /** @type{!Array<!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion, 4));
};


/**
 * @param {!Array<!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion>} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest} returns this
*/
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest.prototype.setQuestionanswerList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest.prototype.addQuestionanswer = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateApproveOrRejectRequest.prototype.clearQuestionanswerList = function() {
  return this.setQuestionanswerList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    goaldetails: (f = msg.getGoaldetails()) && proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.toObject(includeInstance, f),
    answer1: jspb.Message.getFieldWithDefault(msg, 2, ""),
    answer2: jspb.Message.getFieldWithDefault(msg, 3, ""),
    answer3: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest;
  return proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest;
      reader.readMessage(value,proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.deserializeBinaryFromReader);
      msg.setGoaldetails(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnswer1(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnswer2(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnswer3(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGoaldetails();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.serializeBinaryToWriter
    );
  }
  f = message.getAnswer1();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAnswer2();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAnswer3();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional UpdateGoalRequest goalDetails = 1;
 * @return {?proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest.prototype.getGoaldetails = function() {
  return /** @type{?proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest} */ (
    jspb.Message.getWrapperField(this, proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest, 1));
};


/**
 * @param {?proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest|undefined} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest} returns this
*/
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest.prototype.setGoaldetails = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest.prototype.clearGoaldetails = function() {
  return this.setGoaldetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest.prototype.hasGoaldetails = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string answer1 = 2;
 * @return {string}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest.prototype.getAnswer1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest.prototype.setAnswer1 = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string answer2 = 3;
 * @return {string}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest.prototype.getAnswer2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest.prototype.setAnswer2 = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string answer3 = 4;
 * @return {string}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest.prototype.getAnswer3 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateAlignQuestionRequest.prototype.setAnswer3 = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    goaldetails: (f = msg.getGoaldetails()) && proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.toObject(includeInstance, f),
    purposestatus: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    toppriority: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    selectedpurposesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    selectedbenefitsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    purposequestionanswerMap: (f = msg.getPurposequestionanswerMap()) ? f.toObject(includeInstance, undefined) : [],
    startdate: jspb.Message.getFieldWithDefault(msg, 7, 0),
    durationindays: jspb.Message.getFieldWithDefault(msg, 8, 0),
    namealias: jspb.Message.getFieldWithDefault(msg, 9, ""),
    descriptionalias: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest;
  return proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest;
      reader.readMessage(value,proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.deserializeBinaryFromReader);
      msg.setGoaldetails(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPurposestatus(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setToppriority(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addSelectedpurposes(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addSelectedbenefits(value);
      break;
    case 6:
      var value = msg.getPurposequestionanswerMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartdate(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDurationindays(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamealias(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescriptionalias(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGoaldetails();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.serializeBinaryToWriter
    );
  }
  f = message.getPurposestatus();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getToppriority();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getSelectedpurposesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getSelectedbenefitsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getPurposequestionanswerMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getStartdate();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getDurationindays();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getNamealias();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDescriptionalias();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional UpdateGoalRequest goalDetails = 1;
 * @return {?proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.getGoaldetails = function() {
  return /** @type{?proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest} */ (
    jspb.Message.getWrapperField(this, proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest, 1));
};


/**
 * @param {?proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest|undefined} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest} returns this
*/
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.setGoaldetails = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.clearGoaldetails = function() {
  return this.setGoaldetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.hasGoaldetails = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool purposeStatus = 2;
 * @return {boolean}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.getPurposestatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.setPurposestatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool topPriority = 3;
 * @return {boolean}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.getToppriority = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.setToppriority = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * repeated string selectedPurposes = 4;
 * @return {!Array<string>}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.getSelectedpurposesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.setSelectedpurposesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.addSelectedpurposes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.clearSelectedpurposesList = function() {
  return this.setSelectedpurposesList([]);
};


/**
 * repeated string selectedBenefits = 5;
 * @return {!Array<string>}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.getSelectedbenefitsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.setSelectedbenefitsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.addSelectedbenefits = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.clearSelectedbenefitsList = function() {
  return this.setSelectedbenefitsList([]);
};


/**
 * map<string, string> purposeQuestionAnswer = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.getPurposequestionanswerMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.clearPurposequestionanswerMap = function() {
  this.getPurposequestionanswerMap().clear();
  return this;
};


/**
 * optional int64 startDate = 7;
 * @return {number}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.getStartdate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.setStartdate = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 durationInDays = 8;
 * @return {number}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.getDurationindays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.setDurationindays = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string nameAlias = 9;
 * @return {string}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.getNamealias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.setNamealias = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string descriptionAlias = 10;
 * @return {string}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.getDescriptionalias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdatePurposeRequest.prototype.setDescriptionalias = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    goaldetails: (f = msg.getGoaldetails()) && proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.toObject(includeInstance, f),
    toppriority: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    startdate: jspb.Message.getFieldWithDefault(msg, 3, 0),
    durationindays: jspb.Message.getFieldWithDefault(msg, 4, 0),
    namealias: jspb.Message.getFieldWithDefault(msg, 5, ""),
    descriptionalias: jspb.Message.getFieldWithDefault(msg, 6, ""),
    questionanswerList: jspb.Message.toObjectList(msg.getQuestionanswerList(),
    proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.toObject, includeInstance),
    purposestatus: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    goaltype: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest;
  return proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest;
      reader.readMessage(value,proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.deserializeBinaryFromReader);
      msg.setGoaldetails(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setToppriority(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartdate(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDurationindays(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamealias(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescriptionalias(value);
      break;
    case 7:
      var value = new proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion;
      reader.readMessage(value,proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.deserializeBinaryFromReader);
      msg.addQuestionanswer(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPurposestatus(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setGoaltype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGoaldetails();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.serializeBinaryToWriter
    );
  }
  f = message.getToppriority();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getStartdate();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getDurationindays();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getNamealias();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescriptionalias();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getQuestionanswerList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.serializeBinaryToWriter
    );
  }
  f = message.getPurposestatus();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getGoaltype();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional UpdateGoalRequest goalDetails = 1;
 * @return {?proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.prototype.getGoaldetails = function() {
  return /** @type{?proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest} */ (
    jspb.Message.getWrapperField(this, proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest, 1));
};


/**
 * @param {?proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest|undefined} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest} returns this
*/
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.prototype.setGoaldetails = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.prototype.clearGoaldetails = function() {
  return this.setGoaldetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.prototype.hasGoaldetails = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool topPriority = 2;
 * @return {boolean}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.prototype.getToppriority = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.prototype.setToppriority = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional int64 startDate = 3;
 * @return {number}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.prototype.getStartdate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.prototype.setStartdate = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 durationInDays = 4;
 * @return {number}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.prototype.getDurationindays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.prototype.setDurationindays = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string nameAlias = 5;
 * @return {string}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.prototype.getNamealias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.prototype.setNamealias = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string descriptionAlias = 6;
 * @return {string}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.prototype.getDescriptionalias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.prototype.setDescriptionalias = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated CustomQuestion questionAnswer = 7;
 * @return {!Array<!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion>}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.prototype.getQuestionanswerList = function() {
  return /** @type{!Array<!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion, 7));
};


/**
 * @param {!Array<!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion>} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest} returns this
*/
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.prototype.setQuestionanswerList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.prototype.addQuestionanswer = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.prototype.clearQuestionanswerList = function() {
  return this.setQuestionanswerList([]);
};


/**
 * optional bool purposeStatus = 8;
 * @return {boolean}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.prototype.getPurposestatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.prototype.setPurposestatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string goalType = 9;
 * @return {string}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.prototype.getGoaltype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomGoalPurposeRequest.prototype.setGoaltype = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    goaldetails: (f = msg.getGoaldetails()) && proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.toObject(includeInstance, f),
    questionanswerList: jspb.Message.toObjectList(msg.getQuestionanswerList(),
    proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest;
  return proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest;
      reader.readMessage(value,proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.deserializeBinaryFromReader);
      msg.setGoaldetails(value);
      break;
    case 2:
      var value = new proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion;
      reader.readMessage(value,proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.deserializeBinaryFromReader);
      msg.addQuestionanswer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGoaldetails();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.serializeBinaryToWriter
    );
  }
  f = message.getQuestionanswerList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * optional UpdateGoalRequest goalDetails = 1;
 * @return {?proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest.prototype.getGoaldetails = function() {
  return /** @type{?proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest} */ (
    jspb.Message.getWrapperField(this, proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest, 1));
};


/**
 * @param {?proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest|undefined} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest} returns this
*/
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest.prototype.setGoaldetails = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest.prototype.clearGoaldetails = function() {
  return this.setGoaldetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest.prototype.hasGoaldetails = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated CustomQuestion questionAnswer = 2;
 * @return {!Array<!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion>}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest.prototype.getQuestionanswerList = function() {
  return /** @type{!Array<!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion, 2));
};


/**
 * @param {!Array<!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion>} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest} returns this
*/
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest.prototype.setQuestionanswerList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest.prototype.addQuestionanswer = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateCustomAlignQuestionRequest.prototype.clearQuestionanswerList = function() {
  return this.setQuestionanswerList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.repeatedFields_ = [5,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.toObject = function(includeInstance, msg) {
  var f, obj = {
    question: jspb.Message.getFieldWithDefault(msg, 1, ""),
    regular: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    mandatory: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    type: jspb.Message.getFieldWithDefault(msg, 4, ""),
    tagsList: jspb.Message.toObjectList(msg.getTagsList(),
    proto.ai.nworx.api.proto.userprogram.usergoal.Tag.toObject, includeInstance),
    order: jspb.Message.getFieldWithDefault(msg, 6, 0),
    answer: jspb.Message.getFieldWithDefault(msg, 7, ""),
    selectedtagsList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion;
  return proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRegular(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMandatory(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 5:
      var value = new proto.ai.nworx.api.proto.userprogram.usergoal.Tag;
      reader.readMessage(value,proto.ai.nworx.api.proto.userprogram.usergoal.Tag.deserializeBinaryFromReader);
      msg.addTags(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrder(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnswer(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addSelectedtags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRegular();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getMandatory();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.ai.nworx.api.proto.userprogram.usergoal.Tag.serializeBinaryToWriter
    );
  }
  f = message.getOrder();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getAnswer();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSelectedtagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
};


/**
 * optional string question = 1;
 * @return {string}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool regular = 2;
 * @return {boolean}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.prototype.getRegular = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.prototype.setRegular = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool mandatory = 3;
 * @return {boolean}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.prototype.getMandatory = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.prototype.setMandatory = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string type = 4;
 * @return {string}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated Tag tags = 5;
 * @return {!Array<!proto.ai.nworx.api.proto.userprogram.usergoal.Tag>}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.prototype.getTagsList = function() {
  return /** @type{!Array<!proto.ai.nworx.api.proto.userprogram.usergoal.Tag>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ai.nworx.api.proto.userprogram.usergoal.Tag, 5));
};


/**
 * @param {!Array<!proto.ai.nworx.api.proto.userprogram.usergoal.Tag>} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion} returns this
*/
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.prototype.setTagsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.Tag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.Tag}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.prototype.addTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.ai.nworx.api.proto.userprogram.usergoal.Tag, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional int32 order = 6;
 * @return {number}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.prototype.getOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.prototype.setOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string answer = 7;
 * @return {string}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.prototype.getAnswer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.prototype.setAnswer = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated string selectedTags = 8;
 * @return {!Array<string>}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.prototype.getSelectedtagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.prototype.setSelectedtagsList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.prototype.addSelectedtags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.CustomQuestion.prototype.clearSelectedtagsList = function() {
  return this.setSelectedtagsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.Tag.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.userprogram.usergoal.Tag.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.Tag} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.userprogram.usergoal.Tag.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    order: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.Tag}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.Tag.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.userprogram.usergoal.Tag;
  return proto.ai.nworx.api.proto.userprogram.usergoal.Tag.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.Tag} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.Tag}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.Tag.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.Tag.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.userprogram.usergoal.Tag.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.Tag} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.userprogram.usergoal.Tag.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrder();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.Tag.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.Tag} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.Tag.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.Tag.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.Tag} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.Tag.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 order = 3;
 * @return {number}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.Tag.prototype.getOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.Tag} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.Tag.prototype.setOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    goaldetails: (f = msg.getGoaldetails()) && proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, ""),
    assignedbyuserid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    assignedby: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest;
  return proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest;
      reader.readMessage(value,proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.deserializeBinaryFromReader);
      msg.setGoaldetails(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssignedbyuserid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssignedby(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGoaldetails();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAssignedbyuserid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAssignedby();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional UpdateGoalRequest goalDetails = 1;
 * @return {?proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest.prototype.getGoaldetails = function() {
  return /** @type{?proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest} */ (
    jspb.Message.getWrapperField(this, proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest, 1));
};


/**
 * @param {?proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest|undefined} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest} returns this
*/
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest.prototype.setGoaldetails = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest.prototype.clearGoaldetails = function() {
  return this.setGoaldetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest.prototype.hasGoaldetails = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string assignedByUserId = 3;
 * @return {string}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest.prototype.getAssignedbyuserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest.prototype.setAssignedbyuserid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string assignedBy = 4;
 * @return {string}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest.prototype.getAssignedby = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateStatusRequest.prototype.setAssignedby = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    goaldetails: (f = msg.getGoaldetails()) && proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.toObject(includeInstance, f),
    goalemotion: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest;
  return proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest;
      reader.readMessage(value,proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.deserializeBinaryFromReader);
      msg.setGoaldetails(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGoalemotion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGoaldetails();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest.serializeBinaryToWriter
    );
  }
  f = message.getGoalemotion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional UpdateGoalRequest goalDetails = 1;
 * @return {?proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest.prototype.getGoaldetails = function() {
  return /** @type{?proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest} */ (
    jspb.Message.getWrapperField(this, proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest, 1));
};


/**
 * @param {?proto.ai.nworx.api.proto.userprogram.usergoal.UpdateGoalRequest|undefined} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest} returns this
*/
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest.prototype.setGoaldetails = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest.prototype.clearGoaldetails = function() {
  return this.setGoaldetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest.prototype.hasGoaldetails = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string goalEmotion = 2;
 * @return {string}
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest.prototype.getGoalemotion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest} returns this
 */
proto.ai.nworx.api.proto.userprogram.usergoal.UpdateEmotionRequest.prototype.setGoalemotion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.ai.nworx.api.proto.userprogram.usergoal);
