/**
 * @fileoverview gRPC-Web generated client stub for ai.nworx.api.proto.cothinksheet
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v4.24.2
// source: cothink-sheet.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var common_common_pb = require('./common/common_pb.js')
const proto = {};
proto.ai = {};
proto.ai.nworx = {};
proto.ai.nworx.api = {};
proto.ai.nworx.api.proto = {};
proto.ai.nworx.api.proto.cothinksheet = require('./cothink-sheet_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.ai.nworx.api.proto.cothinksheet.CothinkSheetServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.ai.nworx.api.proto.cothinksheet.CothinkSheetServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest,
 *   !proto.ai.nworx.api.proto.common.ResponseProto>}
 */
const methodDescriptor_CothinkSheetService_createSheet = new grpc.web.MethodDescriptor(
  '/ai.nworx.api.proto.cothinksheet.CothinkSheetService/createSheet',
  grpc.web.MethodType.UNARY,
  proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest,
  common_common_pb.ResponseProto,
  /**
   * @param {!proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  common_common_pb.ResponseProto.deserializeBinary
);


/**
 * @param {!proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai.nworx.api.proto.common.ResponseProto)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai.nworx.api.proto.common.ResponseProto>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai.nworx.api.proto.cothinksheet.CothinkSheetServiceClient.prototype.createSheet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai.nworx.api.proto.cothinksheet.CothinkSheetService/createSheet',
      request,
      metadata || {},
      methodDescriptor_CothinkSheetService_createSheet,
      callback);
};


/**
 * @param {!proto.ai.nworx.api.proto.cothinksheet.CreateSheetRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai.nworx.api.proto.common.ResponseProto>}
 *     Promise that resolves to the response
 */
proto.ai.nworx.api.proto.cothinksheet.CothinkSheetServicePromiseClient.prototype.createSheet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai.nworx.api.proto.cothinksheet.CothinkSheetService/createSheet',
      request,
      metadata || {},
      methodDescriptor_CothinkSheetService_createSheet);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest,
 *   !proto.ai.nworx.api.proto.common.ResponseProto>}
 */
const methodDescriptor_CothinkSheetService_fetchUserSheet = new grpc.web.MethodDescriptor(
  '/ai.nworx.api.proto.cothinksheet.CothinkSheetService/fetchUserSheet',
  grpc.web.MethodType.UNARY,
  proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest,
  common_common_pb.ResponseProto,
  /**
   * @param {!proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  common_common_pb.ResponseProto.deserializeBinary
);


/**
 * @param {!proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai.nworx.api.proto.common.ResponseProto)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai.nworx.api.proto.common.ResponseProto>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai.nworx.api.proto.cothinksheet.CothinkSheetServiceClient.prototype.fetchUserSheet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai.nworx.api.proto.cothinksheet.CothinkSheetService/fetchUserSheet',
      request,
      metadata || {},
      methodDescriptor_CothinkSheetService_fetchUserSheet,
      callback);
};


/**
 * @param {!proto.ai.nworx.api.proto.cothinksheet.FetchUserSheetRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai.nworx.api.proto.common.ResponseProto>}
 *     Promise that resolves to the response
 */
proto.ai.nworx.api.proto.cothinksheet.CothinkSheetServicePromiseClient.prototype.fetchUserSheet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai.nworx.api.proto.cothinksheet.CothinkSheetService/fetchUserSheet',
      request,
      metadata || {},
      methodDescriptor_CothinkSheetService_fetchUserSheet);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest,
 *   !proto.ai.nworx.api.proto.common.ResponseProto>}
 */
const methodDescriptor_CothinkSheetService_updateSituationContext = new grpc.web.MethodDescriptor(
  '/ai.nworx.api.proto.cothinksheet.CothinkSheetService/updateSituationContext',
  grpc.web.MethodType.UNARY,
  proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest,
  common_common_pb.ResponseProto,
  /**
   * @param {!proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  common_common_pb.ResponseProto.deserializeBinary
);


/**
 * @param {!proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai.nworx.api.proto.common.ResponseProto)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai.nworx.api.proto.common.ResponseProto>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai.nworx.api.proto.cothinksheet.CothinkSheetServiceClient.prototype.updateSituationContext =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai.nworx.api.proto.cothinksheet.CothinkSheetService/updateSituationContext',
      request,
      metadata || {},
      methodDescriptor_CothinkSheetService_updateSituationContext,
      callback);
};


/**
 * @param {!proto.ai.nworx.api.proto.cothinksheet.UpdateSituationContextRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai.nworx.api.proto.common.ResponseProto>}
 *     Promise that resolves to the response
 */
proto.ai.nworx.api.proto.cothinksheet.CothinkSheetServicePromiseClient.prototype.updateSituationContext =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai.nworx.api.proto.cothinksheet.CothinkSheetService/updateSituationContext',
      request,
      metadata || {},
      methodDescriptor_CothinkSheetService_updateSituationContext);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest,
 *   !proto.ai.nworx.api.proto.common.ResponseProto>}
 */
const methodDescriptor_CothinkSheetService_fetchSectionClarity = new grpc.web.MethodDescriptor(
  '/ai.nworx.api.proto.cothinksheet.CothinkSheetService/fetchSectionClarity',
  grpc.web.MethodType.UNARY,
  proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest,
  common_common_pb.ResponseProto,
  /**
   * @param {!proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  common_common_pb.ResponseProto.deserializeBinary
);


/**
 * @param {!proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai.nworx.api.proto.common.ResponseProto)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai.nworx.api.proto.common.ResponseProto>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai.nworx.api.proto.cothinksheet.CothinkSheetServiceClient.prototype.fetchSectionClarity =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai.nworx.api.proto.cothinksheet.CothinkSheetService/fetchSectionClarity',
      request,
      metadata || {},
      methodDescriptor_CothinkSheetService_fetchSectionClarity,
      callback);
};


/**
 * @param {!proto.ai.nworx.api.proto.cothinksheet.FetchSectionClarityRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai.nworx.api.proto.common.ResponseProto>}
 *     Promise that resolves to the response
 */
proto.ai.nworx.api.proto.cothinksheet.CothinkSheetServicePromiseClient.prototype.fetchSectionClarity =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai.nworx.api.proto.cothinksheet.CothinkSheetService/fetchSectionClarity',
      request,
      metadata || {},
      methodDescriptor_CothinkSheetService_fetchSectionClarity);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest,
 *   !proto.ai.nworx.api.proto.common.ResponseProto>}
 */
const methodDescriptor_CothinkSheetService_fetchQuestionClarity = new grpc.web.MethodDescriptor(
  '/ai.nworx.api.proto.cothinksheet.CothinkSheetService/fetchQuestionClarity',
  grpc.web.MethodType.UNARY,
  proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest,
  common_common_pb.ResponseProto,
  /**
   * @param {!proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  common_common_pb.ResponseProto.deserializeBinary
);


/**
 * @param {!proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai.nworx.api.proto.common.ResponseProto)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai.nworx.api.proto.common.ResponseProto>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai.nworx.api.proto.cothinksheet.CothinkSheetServiceClient.prototype.fetchQuestionClarity =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai.nworx.api.proto.cothinksheet.CothinkSheetService/fetchQuestionClarity',
      request,
      metadata || {},
      methodDescriptor_CothinkSheetService_fetchQuestionClarity,
      callback);
};


/**
 * @param {!proto.ai.nworx.api.proto.cothinksheet.FetchQuestionClarityRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai.nworx.api.proto.common.ResponseProto>}
 *     Promise that resolves to the response
 */
proto.ai.nworx.api.proto.cothinksheet.CothinkSheetServicePromiseClient.prototype.fetchQuestionClarity =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai.nworx.api.proto.cothinksheet.CothinkSheetService/fetchQuestionClarity',
      request,
      metadata || {},
      methodDescriptor_CothinkSheetService_fetchQuestionClarity);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest,
 *   !proto.ai.nworx.api.proto.common.ResponseProto>}
 */
const methodDescriptor_CothinkSheetService_updateQuestionClarity = new grpc.web.MethodDescriptor(
  '/ai.nworx.api.proto.cothinksheet.CothinkSheetService/updateQuestionClarity',
  grpc.web.MethodType.UNARY,
  proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest,
  common_common_pb.ResponseProto,
  /**
   * @param {!proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  common_common_pb.ResponseProto.deserializeBinary
);


/**
 * @param {!proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ai.nworx.api.proto.common.ResponseProto)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ai.nworx.api.proto.common.ResponseProto>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ai.nworx.api.proto.cothinksheet.CothinkSheetServiceClient.prototype.updateQuestionClarity =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ai.nworx.api.proto.cothinksheet.CothinkSheetService/updateQuestionClarity',
      request,
      metadata || {},
      methodDescriptor_CothinkSheetService_updateQuestionClarity,
      callback);
};


/**
 * @param {!proto.ai.nworx.api.proto.cothinksheet.UpdateQuestionClarityRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ai.nworx.api.proto.common.ResponseProto>}
 *     Promise that resolves to the response
 */
proto.ai.nworx.api.proto.cothinksheet.CothinkSheetServicePromiseClient.prototype.updateQuestionClarity =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ai.nworx.api.proto.cothinksheet.CothinkSheetService/updateQuestionClarity',
      request,
      metadata || {},
      methodDescriptor_CothinkSheetService_updateQuestionClarity);
};


module.exports = proto.ai.nworx.api.proto.cothinksheet;

